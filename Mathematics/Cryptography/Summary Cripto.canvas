{
	"nodes":[
		{"type":"group","id":"aca6c424667ecf87","x":860,"y":-3380,"width":2913,"height":3320,"label":"Encryption Schemes"},
		{"type":"group","id":"eb04c75b9d3e963e","x":-2000,"y":-2709,"width":2261,"height":1938,"label":"Security and Intro"},
		{"type":"group","id":"7fea37490c973dc3","x":1231,"y":240,"width":2172,"height":1251,"label":"Asymmetric Encryption"},
		{"type":"group","id":"71edcb1aae8a08c1","x":4260,"y":-1510,"width":932,"height":1390,"label":"Avoding malleability"},
		{"type":"file","file":"Mathematics/Cryptography/Encryption schemas/DES.md","id":"35e7ae063c3f4b1b","x":2440,"y":-3360,"width":1313,"height":1870},
		{"type":"file","file":"Mathematics/Cryptography/Encryption schemas/RSA.md","subpath":"#RSA OAEP","id":"ebd254e80cea0ab1","x":4280,"y":-1197,"width":847,"height":1057},
		{"type":"file","file":"Mathematics/Cryptography/Encryption schemas/RSA.md","subpath":"#RSA Signatures","id":"692e0025d939957a","x":4280,"y":-1490,"width":892,"height":175},
		{"type":"file","file":"Mathematics/Cryptography/Encryption schemas/Encryption schema properties.md","id":"a58592978a01097e","x":880,"y":-2084,"width":809,"height":667},
		{"type":"file","file":"Mathematics/Cryptography/Encryption schemas/Elgamal.md","id":"52413bb87845008a","x":880,"y":-1241,"width":809,"height":1141},
		{"type":"text","text":"### Perfect Secrecy\n\nA non necessary condition, we say that an encryption scheme has perfect secrecy when:\nLet $\\forall k \\in \\mathcal{K},\\forall c \\in \\mathcal{C},\\forall m_{0},m_{1}\\in \\mathcal{M}\\quad$:\n$$\nP[c=E_{k}(m_{0})]=P[c=E_{k}(m_{1})]\n$$\nor\n\n$$\nP(m|\\mathcal{C}=c)=P(m)\n$$\n\nThis means that the ciphertext produced does not provide any information about the original message, and that ciphertext was equally likely to come from any message.\n","id":"14d2383d9d0e1154","x":-720,"y":-2383,"width":961,"height":353},
		{"type":"text","text":"### Correctness:\n\nAll encryption scheme $\\Sigma$ must satisfy correctness:\n\n$$\n\\forall\\  k \\in \\mathcal{K},\\ m \\in \\mathcal{M}\\quad\nP[\\Sigma.Dec_{k}(\\Sigma.Enc_{k}(m))=m]=1\n$$\n","id":"216340c38200dfbb","x":-720,"y":-2615,"width":884,"height":157},
		{"type":"text","text":"## Security Parameter\n\nThe way to achieve this is through a natural number that we call the _security parameter_, usually denoted by $\\lambda$. The information about both security and efficiency will be expressed in terms of the security parameter.\n\n### Security Level \n\n```ad-abstract\nA cryptographic scheme has $n$-bit security if the best known attack requires $2^n$ steps. When the best known attack is a brute-force attack, then $n=\\lambda$.\n```\n\nTo calculate the bits of security of a scheme, Let $N$ be the number of steps of the best known attack and $\\lambda$ the security parameter\n$$\n\\lambda=\\log_{2}(N)\n$$\nBrute force case:\n$$\n\\begin{align*}\n\\lambda&= \\log_{2}(N)\\\\\n&= \\log_{2}(2^{n})\\\\\n&= n\\\\\n\\lambda&= n\n\\end{align*}\n","id":"96c4920ac960db8c","x":-1562,"y":-1389,"width":1570,"height":598},
		{"type":"text","text":"# Fundamental Security principles\n\n1. **Security depends on the resources of the attacker**: We say that a cryptographic scheme is secure if there are not efficient attacks\n2. **Kerckhoffs' principle**: Design the your system so that it is secure even if the attacker knows all of its algorithms\n3. **Security is impossible without randomness**","id":"549100e3b964742b","x":-720,"y":-1888,"width":728,"height":219},
		{"type":"file","file":"Mathematics/Cryptography/Security/Diffie–Hellman.md","id":"e41019bee6c6846a","x":1251,"y":260,"width":926,"height":361},
		{"type":"file","file":"Mathematics/Cryptography/Security/Block Ciphers.md","id":"93dda92b555af428","x":-1519,"y":-320,"width":1280,"height":4560},
		{"type":"text","text":"# CPA and CCA attacks and security\n\nGiven the situation in which an Adversary $A$ has access to a Challenger $C$. The CPA schema is defined as a \"game\" in which $A$ must send two messages at the same time to $C$ and this will choose at random one of the two messages, encrypt it, and return it back to $A$. Then, if $A$ has a better chance to guess which message that cipher belongs to (i.e. better than random $\\frac{1}{2}$). \n\nIf the can gain this advantage using only these actions:\n\n* $A$ can perform any efficient algorithm  \n* $A$ can send any message to get the cipher from $C$ while this messages are different from the one we are trying to obtain. \n\nWe will say it is CPA secure\n\nIf this holds, we then can check for CCA security. Following the same \"game\" but with an extra action\n\n* Now, $A$ can send also ciphers to be decrypted for as long as that cipher is not the same one as the one we are trying to obtain","id":"c5ad774870bcd53b","x":-1980,"y":-1989,"width":1053,"height":420},
		{"type":"text","text":"## Basic parts of a Scheme\n\nThe main parts of an encryption scheme are defined as:\n* $m$ (message): The content Alice (A) wants to encrypt and send to Bob (B)\n* $c$ (ciphertext): The text that hides $m$\n* $k$ (secret key): The secret key used to encrypt the message\n\nAll encryption schemes consist of the following algorithms:\n\n* **KeyGen**: a randomized algorithm that outputs a **key** $k\\in \\mathcal{K}$\n* **Enc**: a (possibly randomized) algorithm that takes a key $k\\in \\mathcal{K}$ and **plaintext** $m\\in \\mathcal{M}$ as input and outputs a **ciphertext** $c\\in \\mathcal{C}$\n* **Dec**: a deterministic algorithm that takes a key $k\\in \\mathcal{K}$ and ciphertext $c\\in \\mathcal{C}$ as input, and outputs a plaintext $m\\in \\mathcal{M}$.\n\nWe call $\\mathcal{K}$ the **key space**, $\\mathcal{M}$ the **message space**, and $\\mathcal{C}$ the **ciphertext space** of the scheme. Sometimes we refer to the entire scheme (the collection of all three algorithms) by a single variable $\\Sigma$. When we do so, we write $\\Sigma$.KeyGen, $\\Sigma$.Enc, … to refer to its components","id":"58878a8fa206e25e","x":-1980,"y":-2537,"width":1053,"height":428},
		{"type":"file","file":"Mathematics/Cryptography/Encryption schemas/RSA.md","id":"c1a9fee909ea8749","x":1880,"y":-1179,"width":974,"height":1019},
		{"type":"file","file":"Mathematics/Cryptography/Security/Hash Functions.md","id":"902b953c98987a81","x":1261,"y":700,"width":916,"height":771},
		{"type":"file","file":"Mathematics/Cryptography/Security/Secret Sharing.md","id":"f9b057cbaf1bee67","x":2300,"y":371,"width":1052,"height":1100},
		{"type":"file","file":"Mathematics/Cryptography/Security/Attacks.md","id":"6ae933ebf25dfb8a","x":3880,"y":-4280,"width":1513,"height":1440}
	],
	"edges":[
		{"id":"d3b1d74f028f17e3","fromNode":"549100e3b964742b","fromSide":"bottom","toNode":"96c4920ac960db8c","toSide":"top"},
		{"id":"9eecd4d3f105c07a","fromNode":"58878a8fa206e25e","fromSide":"right","toNode":"14d2383d9d0e1154","toSide":"left"},
		{"id":"c905d677fee417a3","fromNode":"58878a8fa206e25e","fromSide":"right","toNode":"216340c38200dfbb","toSide":"left"},
		{"id":"aee35893c4d881ab","fromNode":"58878a8fa206e25e","fromSide":"bottom","toNode":"c5ad774870bcd53b","toSide":"top"},
		{"id":"5f9c90ca47a16bc6","fromNode":"58878a8fa206e25e","fromSide":"right","toNode":"549100e3b964742b","toSide":"left"},
		{"id":"1a8f7331098b7510","fromNode":"a58592978a01097e","fromSide":"bottom","toNode":"52413bb87845008a","toSide":"top"},
		{"id":"1b56c7063e376910","fromNode":"a58592978a01097e","fromSide":"bottom","toNode":"c1a9fee909ea8749","toSide":"top"},
		{"id":"0e1375ee9a1dafd6","fromNode":"a58592978a01097e","fromSide":"right","toNode":"35e7ae063c3f4b1b","toSide":"left"},
		{"id":"2badb37f8976c66b","fromNode":"7fea37490c973dc3","fromSide":"top","toNode":"aca6c424667ecf87","toSide":"bottom"},
		{"id":"686c9c60d33d8f70","fromNode":"eb04c75b9d3e963e","fromSide":"right","toNode":"aca6c424667ecf87","toSide":"left"},
		{"id":"ed2ce77c9bec1f84","fromNode":"c1a9fee909ea8749","fromSide":"right","toNode":"ebd254e80cea0ab1","toSide":"left"}
	]
}